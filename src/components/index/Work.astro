---
import { Icon } from "astro-icon/components";

const projectSections = [
    {
        title: "Featured Deployments",
        projects: [
            {
                title: "Portfolio Website",
                description: "This Site: My personal portfolio built with Astro and Tailwind CSS",
                href: "https://github.com/eschmechel/portfolio-website",
                tech: ["Astro", "Tailwind", "TypeScript"],
                date: "September 2025",
                status: "Live"
            },
            {
                title: "Student Software Association",
                description: "Student-run club focused on building free, open-source solutions and applications for the Vancouver community",
                href: "https://studentsoftware.org",
                tech: ["Next.js", "React", "Tailwind", "Cloudflare Workers"],
                date: "May 2025 - Present",
                status: "In-progress"
            },
            {
                title: "Langara Scheduler",
                description: "Course scheduling tool for Langara College students",
                href: "https://github.com/LMSAIH/LangaraScraper",
                tech: ["Typescript", "Node.js", "Express", "MongoDB"],
                date: "May 2025- August 2025",
                status: "Archived",
                extra: "Project archived due to Langara migrating to Workday.",
            },

        ]
    },
    {
        title: "Game Development",
        projects: [
            {
                title: "Anti-Cheat Development",
                description: "Testing self-developed cheats against singleplayer games to understand anti-cheat evasion techniques",
                href: "",
                tech: ["C++", "x64 Assembly", "Reverse Engineering", "Network Security"],
                date: "November 2024 - Present",
                status: "In-progress"
            },
            {
                title: "Unreal Engine Custom Matchmaking Plugin",
                description: "Custom matchmaking plugin for UE5 utilizing Steam Peer-to-Peer networking",
                href: "",
                tech: ["Unreal Engine", "C++", "Blueprints", "Steamworks SDK"],
                date: "August 2025",
                status: "Stalled",
                extra: "Project stalled due to migration to Linux, and lack of UE5 Linux support."
            },
        ]
    },
    {
        title: "Technical Projects",
        projects: [
            {
                title: "Home Lab",
                description: "Self-hosted Proxmox cluster across multiple nodes using RAID-10 storage for resilient VM and container hosting",
                href: "",
                tech: ["Proxmox", "Linux", "Docker", "Nginx", "Wireguard"],
                date: "June 2025 - Present",
                status: "Live"
            },
        ]
    }
];
---

<section id="work" class="max-w-5xl mx-auto px-4 py-16">
    <!-- Section Header -->
    <div class="mb-16">
        <h2 class="text-4xl font-black text-text mb-3">
            Selected <span class="text-gradient">Work</span>
        </h2>
        <p class="text-text-muted text-lg">
            Web applications in production and game development projects
        </p>
    </div>

    <!-- Unified Project Sections Loop -->
    {projectSections.map((section, sectionIndex) => (
        <div class={sectionIndex < projectSections.length - 1 ? "mb-12" : ""}>
            <h3 class="text-sm font-bold text-accent-500 uppercase tracking-wider mb-6">
                {section.title}
            </h3>
            
            <div class="space-y-8">
                {section.projects.map((project) => (
                    <article class="group">
                        {project.href ? (
                            <a 
                                href={project.href}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="block border-l-2 border-border hover:border-accent-500 pl-6 py-2 transition-all duration-300"
                            >
                                <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-2 mb-2">
                                    <h4 class="text-xl font-bold text-text group-hover:text-accent-500 transition-colors">
                                        {project.title}
                                        <Icon name={`line-md:${project.href.includes("github") ? "github" : "external-link"}`} class="inline-block w-4 h-4 ml-1 opacity-0 group-hover:opacity-100 transition-opacity" aria-hidden="true" />
                                    </h4>
                                    <div class="flex flex-col items-end">
                                        <span class="text-sm text-text-muted">{project.date}</span>
                                        {project.extra && (
                                            <span class="text-xs text-text-muted italic mt-1">
                                                {project.extra}
                                            </span>
                                        )}
                                    </div>
                                </div>
                                
                                <p class="text-text-muted mb-3">
                                    {project.description}
                                </p>
                                
                                <div class="flex flex-wrap gap-2">
                                    {project.tech.map((tech) => (
                                        <span class="text-xs text-accent-300 bg-muted px-2 py-1 rounded">
                                            {tech}
                                        </span>
                                    ))}
                                    <span class={
                                        `text-xs px-2 py-1 rounded font-medium ${
                                            project.status === 'Live' || project.status === 'Completed'
                                                ? 'bg-ok/20 text-ok'
                                                : project.status === 'In-progress' || project.status === 'Stalled'
                                                ? 'bg-warn/20 text-warn'
                                                : 'bg-error/20 text-error'
                                        }`
                                    }>
                                        ● {project.status}
                                    </span>
                                </div>
                            </a>
                        ) : (
                            <div class="block border-l-2 border-border hover:border-accent-500 pl-6 py-2 transition-all duration-300">
                                <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-2 mb-2">
                                    <h4 class="text-xl font-bold text-text group-hover:text-accent-500 transition-colors">
                                        {project.title}
                                    </h4>
                                    <div class="flex flex-col items-end">
                                        <span class="text-sm text-text-muted">{project.date}</span>
                                        {project.extra && (
                                            <span class="text-xs text-text-muted italic mt-1">
                                                {project.extra}
                                            </span>
                                        )}
                                    </div>
                                </div>
                                
                                <p class="text-text-muted mb-3">
                                    {project.description}
                                </p>
                                
                                <div class="flex flex-wrap gap-2">
                                    {project.tech.map((tech) => (
                                        <span class="text-xs text-accent-300 bg-muted px-2 py-1 rounded">
                                            {tech}
                                        </span>
                                    ))}
                                    <span class={
                                        `text-xs px-2 py-1 rounded font-medium ${
                                            project.status === 'Live' || project.status === 'Completed'
                                                ? 'bg-ok/20 text-ok'
                                                : project.status === 'In-progress' || project.status === 'Stalled'
                                                ? 'bg-warn/20 text-warn'
                                                : 'bg-error/20 text-error'
                                        }`
                                    }>
                                        ● {project.status}
                                    </span>
                                </div>
                            </div>
                        )}
                    </article>
                ))}
            </div>
        </div>
    ))}
</section>
