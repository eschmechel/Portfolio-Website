---
import { Icon } from "astro-icon/components";
import GithubChart from "../index/GithubChart.astro"

const projectSections = [
    {
        title: "Featured Deployments",
        projects: [
            {
                title: "Langara French Club Website",
                description: "Official website for the Langara French Club, a student-run organization at Langara College, featuring event management and membership sign-ups.",
                href: "https://langarafr.com",
                status: "Live",
            },
            {
                title: "Student Software Association",
                description: "Student-run club focused on building free, open-source solutions and applications for the Vancouver community, integrated with Github for OAuth and project management, enabling students to securely collaborate on projects.",
                href: "https://studentsoftware.org",
                status: "In-progress"
            },
            {
                title: "Langara Scheduler",
                description: "Course scheduling tool for Langara College students, made as a replacement for the abandoned LangaraCS Club's planner. Showcasing data from the Langara College website, with transfer data and Rate-My-Professor integration.",
                href: "https://github.com/LMSAIH/LangaraScraper",
                status: "Archived",
            },
            {
                title: "Mapd",
                description: "StormHacks2025 Project, leveraging open source data into impactful visuals",
                href: "https://mapd.tech"
                status: "Active",
            },

        ]
    },
    {
        title: "Game Development",
        projects: [
            {
                title: "Anti-Cheat Development",
                description: "Studying and developing cheats and anti-cheat solutions to gain better understanding of game-hacking techniques, and circumventions against cheat software. Solely leveraged against single-player games to forgo ethical concerns.",
                href: "",
                status: "In-progress"
            },
            {
                title: "Unreal Engine Custom Matchmaking Plugin",
                description: "Custom matchmaking plugin for UE5 utilizing Steam Peer-to-Peer networking",
                href: "",
                status: "Stalled",
            },
            {
                title: "20 Games Challenge",
                description: "A challenge to recreate 20 games in 1 year using various game engines and frameworks",
                href: "https://games.eschmechel.dev",
                status: "In-progress"
            }
        ]
    },
    {
        title: "Technical Projects",
        projects: [
            {
                title: "Home Lab",
                description: "Self-hosted Proxmox cluster across multiple nodes using RAID-10 storage for resilient VM and container hosting",
                href: "",
                status: "Live"
            },
        ]
    }
];

type Experience = {
    type: "Education" | "Work Experience" | "Volunteering Experience" | "Certifications & Achievements";
    icon?: string;
    title: string;
    institution?: string;
    company?: string;
    location: string;
    date: string;
    achievements?: string[];
    description?: string;
};
const experiencesSections: Experience[] = [

    {
        type: "Education",
        icon: "langara-college",
        title:"Associate of Science in Computer Science",
        institution: "Langara College",
        location: "Vancouver, BC",
        date: "September 2024 - Present",
        achievements: [],
        description:"",
    },
    {
        icon: "data-annotation",
        type: "Work Experience",
        title:"AI Red Teamer",
        company: "Data Annotation",
        location: "Remote",
        date: "November 2024 - Present",
        achievements: [
            "Conducted red teaming exercises to identify vulnerabilities in AI models",
            "Provided detailed reports and recommendations to improve AI security"
        ],
        description:"Gained experience in AI security and ethical hacking.",
    },
    {
        icon: "french-club",
        type: "Volunteering Experience",
        title:"IT Associate ",
        company: "Langara French Club",
        location: "Vancouver, BC",
        date: "June 2025 - Present",
        achievements: [
            "Developed and maintained the club's website using React and Tailwind CSS",
            "Managed event registrations and member sign-ups through the website",
            "Provided technical support for club events and activities"
        ],
        description:"",
    },
    {
        icon: "riot-games",
        type: "Volunteering Experience",
        title:"Game Tester",
        company: "Riot Games",
        location: "Remote",
        date: "Janurary 2025",
        achievements: [
            "Tested new game features and provided feedback to the development team",
            "Identified and reported bugs and issues in the game"
        ],
        description:"",
    },
];

const techStack = [
    {
        category: "Frontend",
        technologies: [
            { name: "TypeScript", icon: "simple-icons:typescript", color: "text-[#3178C6]", url: "https://www.typescriptlang.org/" },
            { name: "React", icon: "simple-icons:react", color: "text-[#61DAFB]", url: "https://react.dev/" },
            { name: "Next.js", icon: "simple-icons:nextdotjs", color: "text-text", url: "https://nextjs.org/" },
            { name: "Tailwind CSS", icon: "simple-icons:tailwindcss", color: "text-[#06B6D4]", url: "https://tailwindcss.com/" },
            { name: "Astro", icon: "simple-icons:astro", color: "text-[#FF5D01]", url: "https://astro.build/" },
            { name: "HTML5", icon: "simple-icons:html5", color: "text-[#E34F26]", url: "https://developer.mozilla.org/en-US/docs/Web/HTML" },
            { name: "CSS3", icon: "simple-icons:css3", color: "text-[#1572B6]", url: "https://developer.mozilla.org/en-US/docs/Web/CSS" },
        ]
    },
    {
        category: "Backend",
        technologies: [
            { name: "Node.js", icon: "simple-icons:nodedotjs", color: "text-[#339933]", url: "https://nodejs.org/" },
            { name: "Python", icon: "simple-icons:python", color: "text-[#3776AB]", url: "https://www.python.org/" },
            { name: "Express", icon: "simple-icons:express", color: "text-text", url: "https://expressjs.com/" },
            { name: "MongoDB", icon: "simple-icons:mongodb", color: "text-[#47A248]", url: "https://www.mongodb.com/" },
            { name: "Redis", icon: "simple-icons:redis", color: "text-[#DC382D]", url: "https://redis.io/" },
        ]
    },
    {
        category: "Game Dev",
        technologies: [
            { name: "C++", icon: "simple-icons:cplusplus", color: "text-[#00599C]", url: "https://isocpp.org/" },
            { name: "C#", icon: "simple-icons:csharp", color: "text-[#239120]", url: "https://learn.microsoft.com/en-us/dotnet/csharp/" },
            { name: "Unreal Engine", icon: "simple-icons:unrealengine", color: "text-text", url: "https://www.unrealengine.com/" },
            { name: "Unity", icon: "simple-icons:unity", color: "text-text", url: "https://unity.com/" },
            { name: "Steamworks SDK", icon: "simple-icons:steam", color: "text-[#00ADEE]", url: "https://partner.steamgames.com/" },
        ]
    },
    {
        category: "DevOps",
        technologies: [
            { name: "Docker", icon: "simple-icons:docker", color: "text-[#2496ED]", url: "https://www.docker.com/" },
            { name: "Git", icon: "simple-icons:git", color: "text-[#F05032]", url: "https://git-scm.com/" },
            { name: "Linux", icon: "simple-icons:linux", color: "text-[#FCC624]", url: "https://www.kernel.org/" },
            { name: "Nginx", icon: "simple-icons:nginx", color: "text-[#009639]", url: "https://nginx.org/" },
            { name: "Cloudflare", icon: "simple-icons:cloudflare", color: "text-[#F38020]", url: "https://www.cloudflare.com/" },
            { name: "Proxmox", icon: "simple-icons:proxmox", color: "text-[#E57000]", url: "https://www.proxmox.com/" },
        ]
    },
    {
        category: "Cybersecurity",
        technologies: [
            { name: "Burp Suite", icon: "simple-icons:burpsuite", color: "text-[#FF5722]", url: "https://portswigger.net/burp" },
            { name: "x64dbg", icon: "carbon:debug", color: "text-[#FF6A00]", url: "https://x64dbg.com/" },
            { name: "Wireshark", icon: "simple-icons:wireshark", color: "text-[#007ACC]", url: "https://www.wireshark.org/" },
            { name: "Wireguard", icon: "simple-icons:wireguard", color: "text-[#8BC9FF]", url: "https://www.wireguard.com/" },
            { name: "Bash", icon: "simple-icons:gnubash", color: "text-[#4EAA25]", url: "https://www.gnu.org/software/bash/" },
        ]
    }
];
---

<section id="work" class="max-w-5xl mx-auto px-4 pb-8 ">
    <!-- Section Header -->
    <div class="mb-16">
        <h2 class="text-4xl font-semibold text-text mb-3">
            Selected Work
        </h2>
        <p class="text-text-muted text-lg">
            Web applications in production and game development projects
        </p>
    </div>

    <!-- Unified Project Sections Loop -->
    {projectSections.map((section, sectionIndex) => (
        <div class="mb-12">
            <h3 class="text-sm font-bold text-accent-500 uppercase tracking-wider mb-6">
                {section.title}
            </h3>
            
            <div class="space-y-8">
                {section.projects.map((project) => (
                    <article class="group">
                        {project.href ? (
                            <a 
                                href={project.href}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="block border-l-2 border-border hover:border-accent-500 rounded-lg pl-6 py-2 transition-all duration-300"
                            >
                                <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-2 mb-2">
                                    <h4 class="text-xl font-bold text-text group-hover:text-accent-500 transition-colors">
                                        {project.title}
                                        <Icon name={`line-md:${project.href.includes("github") ? "github" : "external-link"}`} class="inline-block w-4 h-4 ml-1 opacity-0 group-hover:opacity-100 transition-opacity" aria-hidden="true" />
                                    </h4>
                                    <span class={
                                        `text-xs px-2 py-1 rounded font-medium whitespace-nowrap ${
                                            project.status === 'Live' || project.status === 'Completed'
                                                ? 'bg-ok/20 text-ok'
                                                : project.status === 'In-progress'
                                                ? 'bg-warn/20 text-warn'
                                                : 'bg-error/20 text-error'
                                        }`
                                    }>
                                        ● {project.status}
                                    </span>
                                </div>
                                
                                <p class="text-text-muted mb-3 max-w-prose">
                                    {project.description}
                                </p>
                            </a>
                        ) : (
                            <div class="block border-l-2 border-border rounded-lg hover:border-accent-500 hover:cursor-default pl-6 py-2" >
                                <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-2 mb-2">
                                    <h4 class="text-xl font-bold text-text group-hover:text-accent-500">
                                        {project.title}
                                    </h4>
                                    <span class={
                                        `text-xs px-2 py-1 rounded font-medium whitespace-nowrap ${
                                            project.status === 'Live' || project.status === 'Completed'
                                                ? 'bg-ok/20 text-ok'
                                                : project.status === 'In-progress'
                                                ? 'bg-warn/20 text-warn'
                                                : 'bg-error/20 text-error'
                                        }`
                                    }>
                                        ● {project.status}
                                    </span>
                                </div>
                                
                                <p class="text-text-muted mb-3 max-w-prose">
                                    {project.description}
                                </p>
                            </div>
                        )}
                    </article>
                ))}
            </div>
        </div>
    ))}

    <!-- GitHub Chart -->
    <div class="mb-4">
        <h3 class="text-sm font-bold text-accent-500 uppercase tracking-wider mb-6">
            Github Contribution Chart
        </h3>
        <GithubChart />
    </div>
</section>

<section id="experiences" class="max-w-5xl mx-auto py-8 px-4 border-t border-border">
    <!-- Section Header -->
    <div class="mb-16">
        <h2 class="text-4xl font-semibold text-text mb-3">
            Experiences
        </h2>
        <p class="text-text-muted text-lg">
            Academic background, work experience, and qualifications
        </p>
    </div>
    
    <!-- Group experiences by type -->
    {["Education", "Work Experience", "Volunteering Experience", "Certifications"].map((type) => {
        const typeExperiences = experiencesSections.filter(exp => exp.type === type);
        if (typeExperiences.length === 0) return null;
        return (
            <div class="mb-12">
                <h3 class="text-sm font-bold text-accent-500 uppercase tracking-wider mb-6 flex items-center gap-2">
                    {type}
                </h3>
                
                <div class="space-y-8">
                    {typeExperiences.map((experience, index) => {
                        const hasExpandableContent = (experience.description || (experience.achievements && experience.achievements.length > 0));
                        return (
                            <article class="group border-l-2 border-border hover:border-accent-500 rounded-lg transition-all duration-300">
                                <button
                                    data-experience-toggle={`${type}-${index}`}
                                    class={`w-full text-left pl-6 py-2 ${hasExpandableContent ? 'cursor-pointer' : 'cursor-default'}`}
                                    aria-expanded="false"
                                    disabled={!hasExpandableContent}
                                >
                                    <div class="flex flex-col md:flex-row md:items-start md:justify-between gap-2 mb-2">
                                        <h4 class="text-xl font-bold text-text group-hover:text-accent-500 transition-colors flex items-center gap-2">
                                            {experience.icon && (
                                                <Icon name={experience.icon} class="size-12 rounded-full text-accent-500 flex-shrink-0" aria-hidden="true" />
                                            )}
                                            <span>{experience.title}</span>
                                        </h4>
                                        <div class="flex flex-col items-end gap-2">
                                            <span class="text-xs text-text-muted whitespace-nowrap flex items-center gap-1">
                                                {experience.date}
                                            </span>
                                            {hasExpandableContent && (
                                                <div class="text-xs text-accent-500 font-medium flex items-center gap-1">
                                                    <Icon id="chevron" name="line-md:chevron-right" class="w-4 h-4 transition-transform duration-300" aria-hidden="true" />
                                                </div>
                                            )}
                                        </div>
                                    </div>
                                    
                                    <p class="text-text-muted text-sm mb-2 flex items-center gap-1.5">
                                        {experience.company || experience.institution} • {experience.location}
                                    </p>
                                </button>
                                
                                <div 
                                    data-experience-content={`${type}-${index}`}
                                    class="overflow-hidden max-h-0 transition-all duration-300 pl-6"
                                >
                                    {experience.description && (
                                        <p class="text-text-muted mb-3 max-w-prose mt-3">
                                            {experience.description}
                                        </p>
                                    )}
                                    
                                    {experience.achievements && experience.achievements.length > 0 && (
                                        <ul class="list-disc list-inside space-y-1 ml-2 mt-3 pb-2">
                                            {experience.achievements.map((achievement) => (
                                                <li class="text-text-muted text-sm">
                                                    {achievement}
                                                </li>
                                            ))}
                                        </ul>
                                    )}
                                </div>
                            </article>
                        );
                    })}
                </div>
            </div>
        );
    })}
</section>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const toggleButtons = document.querySelectorAll('[data-experience-toggle]');
        
        toggleButtons.forEach(button => {
            // Skip if button is disabled (no details to show)
            if (button.hasAttribute('disabled')) return;
            
            button.addEventListener('click', () => {
                const contentId = button.getAttribute('data-experience-toggle');
                const content = document.querySelector(`[data-experience-content="${contentId}"]`) as HTMLElement;
                const icon = button.querySelector('#chevron');
                
                if (content && icon) {
                    const isExpanded = button.getAttribute('aria-expanded') === 'true';
                    
                    if (isExpanded) {
                        content.style.maxHeight = '0';
                        icon.style.transform = 'rotate(0deg)';
                        button.setAttribute('aria-expanded', 'false');
                    } else {
                        content.style.maxHeight = content.scrollHeight + 'px';
                        icon.style.transform = 'rotate(90deg)';
                        button.setAttribute('aria-expanded', 'true');
                    }
                }
            });
        });
    });
</script>

<!-- Tech Stack Section -->
<section id="tech-stack" class="max-w-5xl mx-auto px-4 py-8 border-t border-border">
    <!-- Section Header -->
    <div class="mb-8">
        <h2 class="text-4xl font-semibold text-text mb-3">
            Tech Stack
        </h2>
    </div>

    <!-- Tech Categories in 5-Column Grid -->
    <div class="grid grid-cols-3 lg:grid-cols-5 gap-8 max-w-5xl mx-auto">
        {techStack.map((category) => (
            <div class="flex flex-col">
                <h3 class="text-lg font-bold text-accent-500 mb-4">
                    {category.category}
                </h3>
                <div class="space-y-3">
                    {category.technologies.map((tech) => (
                        <a 
                            href={tech.url}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="flex items-center gap-3 group"
                        >
                            <Icon 
                                name={tech.icon} 
                                class={`w-6 h-6 ${tech.color} group-hover:scale-110 transition-transform duration-300 flex-shrink-0`}
                                aria-hidden="true" 
                            />
                            <span class="text-text-muted text-sm font-medium group-hover:text-text transition-colors">
                                {tech.name}
                            </span>
                        </a>
                    ))}
                </div>
            </div>
        ))}
    </div>
</section>
